{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","aria-checked","htmlFor","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0e116e64.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        {props.title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n              Home\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">\r\n              {props.aboutText}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input\r\n            className=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string.isRequired ,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>\r\n        {props.alert.msg}\r\n       \r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text , setText] = useState(\"\");\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"upperCase was clicked : \" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\" Converted to upperCase\",\"success\")\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log(\"lowerCase was clicked : \" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\" Converted to lowerCase\",\"success\")\r\n\r\n\r\n      }\r\n    const handleClrClick = () => {\r\n      \r\n      let newText = \"\";\r\n      setText(newText)\r\n      props.showAlert(\" Text Cleared\",\"success\")\r\n \r\n    }\r\n\r\n    const handleCopy = () => {\r\n      console.log(\"i am a copy\" )\r\n      var text = document.getElementById(\"myBox\")\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\" Copied to Clipboard\",\"success\")\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\" Extra spaces Removed\",\"success\")\r\n\r\n    }\r\n    \r\n    const handleOnChange = (event) => {\r\n        console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n    \r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\" >\r\n       \r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} \r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>ConvertToUpeerCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>ConvertToUpeerCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClrClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length}CHARACTERS characters</p>\r\n      <p>Required {0.008 * text.split(\" \").length} minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport React from 'react';\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport TextForm from \"./components/TextForm\";\n\n\n\nfunction App() {\n  const [mode,setMode] =  useState('light');\n  \n  const [alert,setAlert] =  useState(null);\n\n  const showAlert = (message,type) =>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n  }\n  \n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"#042743\"\n      showAlert(\" Dark mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\" Light mode has been enabled\",\"success\")\n\n\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} aboutText=\"About TextUtils\" />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">  \n      \n      <TextForm showAlert={showAlert} heading=\"enter the text to analyze below\" mode={mode}/>\n      </div>\n     \n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}